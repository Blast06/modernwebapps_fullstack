// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernStore.Infra.Contexts;

namespace ModernStore.Infra.Migrations
{
    [DbContext(typeof(ModernStoreDataContext))]
    [Migration("20190504105055_FirstBase")]
    partial class FirstBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ModernStore")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModernStore.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedIn");

                    b.Property<decimal>("DeliveryFee");

                    b.Property<decimal>("Discount");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("Status");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedIn");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ModernStore.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedIn");

                    b.Property<Guid?>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedIn");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("ModernStore.Domain.Entities.Order", b =>
                {
                    b.OwnsOne("ModernStore.Domain.Entities.Customer", "Customer", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<DateTime?>("BirthDate");

                            b1.Property<Guid>("CreatedBy");

                            b1.Property<DateTime>("CreatedIn");

                            b1.Property<Guid>("OrderId");

                            b1.Property<Guid>("UpdatedBy");

                            b1.Property<DateTime>("UpdatedIn");

                            b1.HasKey("Id")
                                .HasName("Id");

                            b1.HasIndex("OrderId")
                                .IsUnique();

                            b1.ToTable("Customer");

                            b1.HasOne("ModernStore.Domain.Entities.Order")
                                .WithOne("Customer")
                                .HasForeignKey("ModernStore.Domain.Entities.Customer", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("ModernStore.Domain.Entities.User", "User", b2 =>
                                {
                                    b2.Property<Guid>("Id");

                                    b2.Property<bool>("Active");

                                    b2.Property<Guid>("CreatedBy");

                                    b2.Property<DateTime>("CreatedIn");

                                    b2.Property<string>("Password")
                                        .HasMaxLength(32);

                                    b2.Property<Guid>("UpdatedBy");

                                    b2.Property<DateTime>("UpdatedIn");

                                    b2.Property<string>("Username")
                                        .HasMaxLength(20);

                                    b2.HasKey("Id")
                                        .HasName("Id");

                                    b2.ToTable("User","ModernStore");

                                    b2.HasOne("ModernStore.Domain.Entities.Customer")
                                        .WithOne("User")
                                        .HasForeignKey("ModernStore.Domain.Entities.User", "Id")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("ModernStore.Domain.ValueObjects.Document", "Document", b2 =>
                                {
                                    b2.Property<Guid>("CustomerId");

                                    b2.Property<string>("Number");

                                    b2.HasKey("CustomerId");

                                    b2.ToTable("Customer","ModernStore");

                                    b2.HasOne("ModernStore.Domain.Entities.Customer")
                                        .WithOne("Document")
                                        .HasForeignKey("ModernStore.Domain.ValueObjects.Document", "CustomerId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("ModernStore.Domain.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("CustomerId");

                                    b2.Property<string>("EmailAddress");

                                    b2.HasKey("CustomerId");

                                    b2.ToTable("Customer","ModernStore");

                                    b2.HasOne("ModernStore.Domain.Entities.Customer")
                                        .WithOne("Email")
                                        .HasForeignKey("ModernStore.Domain.ValueObjects.Email", "CustomerId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("ModernStore.Domain.ValueObjects.Name", "Name", b2 =>
                                {
                                    b2.Property<Guid>("CustomerId");

                                    b2.Property<string>("FirstName");

                                    b2.Property<string>("LastName");

                                    b2.HasKey("CustomerId");

                                    b2.ToTable("Customer","ModernStore");

                                    b2.HasOne("ModernStore.Domain.Entities.Customer")
                                        .WithOne("Name")
                                        .HasForeignKey("ModernStore.Domain.ValueObjects.Name", "CustomerId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("ModernStore.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("ModernStore.Domain.Entities.Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.OwnsOne("ModernStore.Domain.Entities.Product", "Product", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<Guid>("CreatedBy");

                            b1.Property<DateTime>("CreatedIn");

                            b1.Property<string>("Image")
                                .IsRequired()
                                .HasMaxLength(1024);

                            b1.Property<Guid>("OrderItemId");

                            b1.Property<decimal>("Price");

                            b1.Property<int>("QuantityOnHand");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(80);

                            b1.Property<Guid>("UpdatedBy");

                            b1.Property<DateTime>("UpdatedIn");

                            b1.HasKey("Id")
                                .HasName("Id");

                            b1.HasIndex("OrderItemId")
                                .IsUnique();

                            b1.ToTable("Product");

                            b1.HasOne("ModernStore.Domain.Entities.OrderItem")
                                .WithOne("Product")
                                .HasForeignKey("ModernStore.Domain.Entities.Product", "OrderItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
